Protoc is context and type free protocol compiler, data serializer and deserializer based on XML declarations and code snippets.

About
-----

Workset consists of two XML files - data schema and code snippets.
First XML file declares data formats using simple syntax (let's call it "schema"). 
Second XML file defines code snippets (let's call it "snippets") used to create global data parser with serializer and deserializer pair for each data type.

XML schema features:
	- abstract type name declarations
	- abstract data declarations with structure inheritance
	- numeric packet id representation
	
XML snippets features:
	- template syntax for context variable replacements
	- number of context variables for each template
	- target language and SDK is on your choice
	- header and footer templates
	- default values for each field type
	- packet separator template
	- root namespace template (based on JavaScript commonly used syntax)
	- nested namespace template
	- packet declaration template
	- packet size declaration template
	- packet constructor template
	- packet serializer and deserializer templates
	- global parser template
	- global parser case template
	- field templates for each declared type
	
Folder ./bin contains example test.xml.sample schema and some sample snippets that could be useful to figure out how does it all works.
Provided XML files in NOT real working examples but just test cases. You may vary XML snippets code and structure to achieve various results and use particular any SDK or library you want.

Requirements
------------

C++ compiler with kind of working STL
GNU Make to build under UNIX-like systems
VS2012 or higher to build under win32
